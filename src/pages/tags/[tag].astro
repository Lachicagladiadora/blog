---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../posts/*.md');

  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---
<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {posts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
  </ul>
</BaseLayout>

<!-- ---
import type { MarkdownInstance } from "astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";

type GetStaticPathsOutput = {params: {tag:string}, props: {posts: MarkdownInstance<Record<string, any>>[]}}[]

export const getStaticPaths=async():Promise<GetStaticPathsOutput>=>{
  const allPosts = await Astro.glob('../posts/*.md');
//   return [
//     {params: {tag: "javaScript"}, props: {posts: allPosts}},
//     {params: {tag: "astro"}, props: {posts: allPosts}},
//     {params: {tag: "css"}, props: {posts: allPosts}},
//     {params: {tag: "tailwind"}, props: {posts: allPosts}},
//     {params: {tag: "react"}, props: {posts: allPosts}},
//     {params: {tag: "enviroment"}, props: {posts: allPosts}},
//     {params: {tag: "code"}, props: {posts: allPosts}},
//     {params: {tag: "music"}, props: {posts: allPosts}}
//   ]
const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];

return uniqueTags.map((tag) => {
  const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
  return {
    params: { tag },
    props: { posts: filteredPosts },
  };
});
}

const { tag } = Astro.params;
const { posts } = Astro.props;
// const filteredPosts = posts.filter((post) => post.frontmatter.tags?.includes(tag));
console.log({posts})
---
<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {filteredPosts.map((c)=>(<BlogPost title={c.frontmatter.title} url={c.url??""}/>))} -->
     <!-- {posts} -->
    <!-- {posts.map((post) => <BlogPost url={post.url??""} title={post.frontmatter.title}/>)} -->

  <!-- </ul> -->
<!-- </BaseLayout> -->